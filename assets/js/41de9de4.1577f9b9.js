"use strict";(self.webpackChunkes_documentacion_devops=self.webpackChunkes_documentacion_devops||[]).push([[3287],{1751:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"kubernetes/troubleshooting/calico-bgp-not-established","title":"Calico: BGP Peering No Establecido (Puerto 179)","description":"S\xedntoma","source":"@site/docs/kubernetes/troubleshooting/06-calico-bgp-not-established.md","sourceDirName":"kubernetes/troubleshooting","slug":"/kubernetes/troubleshooting/calico-bgp-not-established","permalink":"/devsecops-playground/docs/kubernetes/troubleshooting/calico-bgp-not-established","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kubernetes/troubleshooting/06-calico-bgp-not-established.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Calico: BGP Peering No Establecido (Puerto 179)"},"sidebar":"tutorialSidebar","previous":{"title":"Calico: Fallo al conectar a Typha (Timeout 5473)","permalink":"/devsecops-playground/docs/kubernetes/troubleshooting/calico-typha-timeout"},"next":{"title":"Dashboard API Pod en CrashLoopBackOff","permalink":"/devsecops-playground/docs/kubernetes/troubleshooting/dashboard-api-crashloop"}}');var r=n(4848),a=n(8453);const i={sidebar_position:6,title:"Calico: BGP Peering No Establecido (Puerto 179)"},l="Problema: Calico/BIRD no establece BGP Peering",c={},t=[{value:"S\xedntoma",id:"s\xedntoma",level:2},{value:"Diagn\xf3stico",id:"diagn\xf3stico",level:2},{value:"Causa Ra\xedz",id:"causa-ra\xedz",level:2},{value:"Soluci\xf3n",id:"soluci\xf3n",level:2},{value:"Verificaci\xf3n Final de Calico",id:"verificaci\xf3n-final-de-calico",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"problema-calicobird-no-establece-bgp-peering",children:"Problema: Calico/BIRD no establece BGP Peering"})}),"\n",(0,r.jsx)(o.h2,{id:"s\xedntoma",children:"S\xedntoma"}),"\n",(0,r.jsxs)(o.p,{children:["La ",(0,r.jsx)(o.code,{children:"Readiness probe"})," del pod ",(0,r.jsx)(o.code,{children:"calico-node"})," (vista en ",(0,r.jsx)(o.code,{children:"kubectl describe pod ..."}),") indica que BGP no est\xe1 establecido con otros nodos."]}),"\n",(0,r.jsx)(o.p,{children:"Readiness probe failed: ... BGP not established with 192.168.100.12,192.168.100.13,192.168.100.14,192.168.100.15"}),"\n",(0,r.jsx)(o.p,{children:"Esto ocurre despu\xe9s de que BIRD ya ha intentado arrancar, lo cual implica que los archivos de configuraci\xf3n exist\xedan (o al menos intent\xf3 leerlos), pero no puede formar las conexiones de vecino BGP."}),"\n",(0,r.jsx)(o.h2,{id:"diagn\xf3stico",children:"Diagn\xf3stico"}),"\n",(0,r.jsxs)(o.p,{children:["El BGP peering entre nodos de Calico se realiza por ",(0,r.jsx)(o.strong,{children:"TCP en el puerto 179"}),". Si los nodos no pueden conectar en este puerto, el peering no se establecer\xe1."]}),"\n",(0,r.jsx)(o.h2,{id:"causa-ra\xedz",children:"Causa Ra\xedz"}),"\n",(0,r.jsxs)(o.p,{children:["El firewall (UFW) en uno o m\xe1s de los nodos est\xe1 bloqueando el tr\xe1fico entrante en el puerto ",(0,r.jsx)(o.strong,{children:"179 TCP"})," desde las IPs de otros nodos de Kubernetes."]}),"\n",(0,r.jsx)(o.h2,{id:"soluci\xf3n",children:"Soluci\xf3n"}),"\n",(0,r.jsxs)(o.p,{children:["Asegurarse de que el puerto 179/TCP est\xe1 abierto en los firewalls de ",(0,r.jsx)(o.strong,{children:"TODOS"})," los nodos de Kubernetes (los 3 maestros y los 2 workers)."]}),"\n",(0,r.jsx)(o.p,{children:(0,r.jsx)(o.strong,{children:"Pasos:"})}),"\n",(0,r.jsxs)(o.ol,{children:["\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Verifica el Firewall (UFW) en CADA UNO DE TUS 5 NODOS (maestros y workers)."})," El puerto ",(0,r.jsx)(o.strong,{children:"179/TCP"})," debe estar abierto para tr\xe1fico entrante desde las IPs de los otros nodos o desde tu subred de nodos."]}),"\n"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-bash",children:"# Conectado por SSH a CADA UNO de los 5 nodos\nsudo ufw status verbose\n"})}),"\n",(0,r.jsxs)(o.p,{children:["Busca una regla ",(0,r.jsx)(o.code,{children:"ALLOW"})," para el puerto ",(0,r.jsx)(o.code,{children:"179/tcp"}),". Si no existe, a\xf1\xe1dela:"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-bash",children:"# Conectado por SSH a un nodo (ej: k8s-worker-02)\n# Prueba la conexi\xf3n a otro nodo (ej: k8s-master-01)\nnc -zv 192.168.100.12 179 # Reemplaza IPs seg\xfan necesites probar\n# Prueba la conexi\xf3n entre varios pares de nodos\n"})}),"\n",(0,r.jsxs)(o.ol,{start:"2",children:["\n",(0,r.jsx)(o.li,{children:(0,r.jsx)(o.strong,{children:"Desde cualquier nodo, prueba la conexi\xf3n manual al puerto 179 en otro nodo:"})}),"\n"]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-bash",children:"# Conectado por SSH a un nodo (ej: k8s-worker-02)\n# Prueba la conexi\xf3n a otro nodo (ej: k8s-master-01)\nnc -zv 192.168.100.12 179 # Reemplaza IPs seg\xfan necesites probar\n# Prueba la conexi\xf3n entre varios pares de nodos\n"})}),"\n",(0,r.jsxs)(o.p,{children:["Deber\xeda decir ",(0,r.jsx)(o.code,{children:"Connection to ... succeeded!"})," si el puerto est\xe1 abierto."]}),"\n",(0,r.jsxs)(o.p,{children:["Una vez que el puerto 179 est\xe9 abierto en todos los firewalls y los pods ",(0,r.jsx)(o.code,{children:"calico-node"})," puedan comunicarse por BGP, deber\xedan establecer el peering. Despu\xe9s de unos minutos, los pods ",(0,r.jsx)(o.code,{children:"calico-node"})," deber\xedan pasar a estado ",(0,r.jsx)(o.code,{children:"READY"})," (1/1 Running)."]}),"\n",(0,r.jsx)(o.h2,{id:"verificaci\xf3n-final-de-calico",children:"Verificaci\xf3n Final de Calico"}),"\n",(0,r.jsxs)(o.p,{children:["Despu\xe9s de solucionar los problemas de Calico (CIDR, Typha, BGP), todos los pods ",(0,r.jsx)(o.code,{children:"calico-node"})," en todos los nodos deber\xedan estar ",(0,r.jsx)(o.code,{children:"1/1 Running"}),"."]}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-bash",children:"kubectl get pods -n calico-system -o wide\n"})}),"\n",(0,r.jsxs)(o.p,{children:["Y los nodos Worker deber\xedan pasar a estado ",(0,r.jsx)(o.code,{children:"Ready"})," en ",(0,r.jsx)(o.code,{children:"kubectl get nodes"}),"."]})]})}function u(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>l});var s=n(6540);const r={},a=s.createContext(r);function i(e){const o=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:o},e.children)}}}]);