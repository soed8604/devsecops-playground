"use strict";(self.webpackChunkes_documentacion_devops=self.webpackChunkes_documentacion_devops||[]).push([[7163],{7299:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>t,contentTitle:()=>d,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"kubernetes/instalacion/join-workers","title":"Unir Nodos Workers","description":"Finalmente, une los nodos Worker (k8s-worker-01 y k8s-worker-02) al cluster. Estos nodos ejecutar\xe1n las cargas de trabajo (tus aplicaciones en Pods).","source":"@site/docs/kubernetes/instalacion/06-join-workers.md","sourceDirName":"kubernetes/instalacion","slug":"/kubernetes/instalacion/join-workers","permalink":"/devsecops-playground/docs/kubernetes/instalacion/join-workers","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kubernetes/instalacion/06-join-workers.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Unir Nodos Workers"},"sidebar":"tutorialSidebar","previous":{"title":"Unir Nodos Control Plane Adicionales","permalink":"/devsecops-playground/docs/kubernetes/instalacion/join-masters"},"next":{"title":"Instalar Helm","permalink":"/devsecops-playground/docs/kubernetes/instalacion/install-helm"}}');var r=o(4848),a=o(8453);const i={sidebar_position:6,title:"Unir Nodos Workers"},d="Unir Nodos Workers (k8s-worker-01, k8s-worker-02)",t={},c=[];function l(e){const s={code:"code",h1:"h1",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"unir-nodos-workers-k8s-worker-01-k8s-worker-02",children:"Unir Nodos Workers (k8s-worker-01, k8s-worker-02)"})}),"\n",(0,r.jsxs)(s.p,{children:["Finalmente, une los nodos Worker (",(0,r.jsx)(s.code,{children:"k8s-worker-01"})," y ",(0,r.jsx)(s.code,{children:"k8s-worker-02"}),") al cluster. Estos nodos ejecutar\xe1n las cargas de trabajo (tus aplicaciones en Pods)."]}),"\n",(0,r.jsx)(s.p,{children:(0,r.jsx)(s.strong,{children:"Pasos en cada nodo Worker (192.168.100.15 y 192.168.100.16):"})}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Aseg\xfarate de que los pre-requisitos est\xe9n listos"})," (Docker/Containerd, kubeadm, kubelet, kubectl instalados, swap deshabilitado, /etc/hosts configurado, firewall b\xe1sico listo).\n[Tu descripci\xf3n aqu\xed sobre si ya hiciste los pre-requisitos en estos nodos]"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsxs)(s.strong,{children:["Ejecuta el comando ",(0,r.jsx)(s.code,{children:"kubeadm join"})," sin flags adicionales."]}),"\nUsa el comando ",(0,r.jsx)(s.code,{children:"kubeadm join"})," que obtuviste como salida de ",(0,r.jsx)(s.code,{children:"kubeadm init"})," en el primer maestro. Para los workers, no necesitas las flags ",(0,r.jsx)(s.code,{children:"--control-plane"})," ni ",(0,r.jsx)(s.code,{children:"--certificate-key"}),"."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Conectado por SSH a k8s-worker-01 (192.168.100.15) Y LUEGO en k8s-worker-02 (192.168.100.16)\nsudo kubeadm join 192.168.100.7:6443 --token abcdef.1234567890abcdef \\\n    --discovery-token-ca-cert-hash sha256:xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n"})}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"192.168.100.7:6443"}),": La IP y puerto de tu balanceador de carga."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"--token ..."}),": El token de descubrimiento."]}),"\n",(0,r.jsxs)(s.li,{children:[(0,r.jsx)(s.code,{children:"--discovery-token-ca-cert-hash ..."}),": El hash del certificado CA del cluster."]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"[Tu salida completa del comando sudo kubeadm join en k8s-worker-01 aqu\xed]\n[Tu salida completa del comando sudo kubeadm join en k8s-worker-02 aqu\xed]"}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.strong,{children:"Verifica el estado de todos los nodos."}),"\nDesde tu m\xe1quina local (con kubectl configurado) o desde cualquiera de los maestros, verifica que los 5 nodos se unieron correctamente."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"# Desde tu m\xe1quina local o un maestro\nkubectl get nodes\n"})}),"\n",(0,r.jsx)(s.p,{children:"[Tu salida final de kubectl get nodes aqu\xed, mostrando los 3 maestros y 2 workers Ready]"}),"\n",(0,r.jsxs)(s.p,{children:["Todos los 5 nodos deben aparecer en estado ",(0,r.jsx)(s.code,{children:"Ready"}),". Si alg\xfan worker se queda en ",(0,r.jsx)(s.code,{children:"NotReady"})," despu\xe9s de unos minutos, puede ser un problema con la CNI en ese nodo (ver secci\xf3n de Troubleshooting)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.p,{children:"\xa1En este punto, tu cluster Kubernetes HA b\xe1sico est\xe1 instalado y los nodos est\xe1n unidos!"}),"\n",(0,r.jsx)(s.hr,{})]})}function u(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,s,o)=>{o.d(s,{R:()=>i,x:()=>d});var n=o(6540);const r={},a=n.createContext(r);function i(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);