"use strict";(self.webpackChunkes_documentacion_devops=self.webpackChunkes_documentacion_devops||[]).push([[387],{7885:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>i,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"kubernetes/troubleshooting/calico-typha-timeout","title":"Calico: Fallo al conectar a Typha (Timeout 5473)","description":"S\xedntoma","source":"@site/docs/kubernetes/troubleshooting/05-calico-typha-timeout.md","sourceDirName":"kubernetes/troubleshooting","slug":"/kubernetes/troubleshooting/calico-typha-timeout","permalink":"/devsecops-playground/docs/kubernetes/troubleshooting/calico-typha-timeout","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/kubernetes/troubleshooting/05-calico-typha-timeout.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Calico: Fallo al conectar a Typha (Timeout 5473)"},"sidebar":"tutorialSidebar","previous":{"title":"Calico: BIRD no encuentra archivos de configuraci\xf3n","permalink":"/devsecops-playground/docs/kubernetes/troubleshooting/calico-missing-bird-config"},"next":{"title":"Calico: BGP Peering No Establecido (Puerto 179)","permalink":"/devsecops-playground/docs/kubernetes/troubleshooting/calico-bgp-not-established"}}');var s=n(4848),c=n(8453);const l={sidebar_position:5,title:"Calico: Fallo al conectar a Typha (Timeout 5473)"},r="Problema: Calico Node no puede conectar a Typha",i={},d=[{value:"S\xedntoma",id:"s\xedntoma",level:2},{value:"Diagn\xf3stico",id:"diagn\xf3stico",level:2},{value:"Causa Ra\xedz",id:"causa-ra\xedz",level:2},{value:"Soluci\xf3n",id:"soluci\xf3n",level:2},{value:"Pasos:",id:"pasos",level:3}];function t(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"problema-calico-node-no-puede-conectar-a-typha",children:"Problema: Calico Node no puede conectar a Typha"})}),"\n",(0,s.jsx)(o.h2,{id:"s\xedntoma",children:"S\xedntoma"}),"\n",(0,s.jsxs)(o.p,{children:["Al revisar los logs del pod ",(0,s.jsx)(o.code,{children:"calico-node"})," (o ",(0,s.jsx)(o.code,{children:"confd"}),' dentro de \xe9l), encuentras advertencias o errores indicando fallos de conexi\xf3n a un endpoint "typha", a menudo con un ',(0,s.jsx)(o.code,{children:"i/o timeout"})," en el puerto 5473 TCP."]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"kubectl logs calico-node-<HASH> -n calico-system # O -c confd\n"})}),"\n",(0,s.jsx)(o.h2,{id:"diagn\xf3stico",children:"Diagn\xf3stico"}),"\n",(0,s.jsxs)(o.p,{children:["El componente ",(0,s.jsx)(o.code,{children:"calico-node"})," (y ",(0,s.jsx)(o.code,{children:"confd"}),") necesita comunicarse con el servicio de Calico llamado ",(0,s.jsx)(o.code,{children:"Typha"}),", que generalmente corre en los nodos Control Plane y ayuda a escalar Calico. El ",(0,s.jsx)(o.code,{children:"timeout"})," al conectar a ",(0,s.jsx)(o.code,{children:"IP_del_Master:5473"})," indica que la conexi\xf3n TCP no se est\xe1 estableciendo. Esto impide que ",(0,s.jsx)(o.code,{children:"calico-node"})," obtenga informaci\xf3n vital (posiblemente incluyendo datos necesarios para generar la configuraci\xf3n de BIRD)."]}),"\n",(0,s.jsx)(o.h2,{id:"causa-ra\xedz",children:"Causa Ra\xedz"}),"\n",(0,s.jsxs)(o.p,{children:["La causa m\xe1s probable es que un firewall est\xe9 bloqueando el tr\xe1fico en el puerto 5473 TCP entre el nodo donde falla ",(0,s.jsx)(o.code,{children:"calico-node"})," (ej: k8s-worker-02) y los nodos Control Plane donde corre ",(0,s.jsx)(o.code,{children:"Typha"})," (ej: k8s-master-01, 02, 03). Tambi\xe9n podr\xeda ser que los pods ",(0,s.jsx)(o.code,{children:"calico-typha"})," no est\xe9n corriendo o est\xe9n unhealthy."]}),"\n",(0,s.jsx)(o.h2,{id:"soluci\xf3n",children:"Soluci\xf3n"}),"\n",(0,s.jsxs)(o.p,{children:["Asegurarse de que el puerto 5473/TCP est\xe1 abierto en los firewalls de los nodos y que los pods ",(0,s.jsx)(o.code,{children:"calico-typha"})," est\xe1n saludables."]}),"\n",(0,s.jsx)(o.h3,{id:"pasos",children:"Pasos:"}),"\n",(0,s.jsxs)(o.ol,{children:["\n",(0,s.jsxs)(o.li,{children:["Verifica el estado de los pods ",(0,s.jsx)(o.code,{children:"calico-typha"})," en los nodos Control Plane:"]}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"kubectl get pods -n calico-system -o wide | grep typha\n"})}),"\n",(0,s.jsxs)(o.p,{children:["Si no est\xe1n Running/Ready, investiga esos pods (",(0,s.jsx)(o.code,{children:"kubectl describe/logs"}),")."]}),"\n",(0,s.jsxs)(o.ol,{start:"2",children:["\n",(0,s.jsx)(o.li,{children:"Verifica el Firewall (UFW) en CADA UNO DE TUS 5 NODOS (maestros y workers). El puerto 5473/TCP debe estar abierto para tr\xe1fico entrante en los nodos Control Plane (donde corre Typha) desde los nodos Worker, y saliente desde los nodos Worker."}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"sudo ufw status verbose\n"})}),"\n",(0,s.jsx)(o.p,{children:"Busca una regla ALLOW para el puerto 5473/tcp. Si no existe, a\xf1\xe1dela:"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"# Si necesitas a\xf1adir la regla 5473/tcp en un nodo:\n# Conectado por SSH a ese nodo\nsudo ufw allow 5473/tcp\nsudo ufw reload\n"})}),"\n",(0,s.jsxs)(o.ol,{start:"3",children:["\n",(0,s.jsx)(o.li,{children:"Desde el nodo worker donde falla Calico (ej: k8s-worker-02), prueba la conexi\xf3n manual a Typha:"}),"\n"]}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{className:"language-bash",children:"nc -zv 192.168.100.13 5473 # Reemplaza 192.168.100.13 por la IP de un maestro donde corre Typha\n"})}),"\n",(0,s.jsxs)(o.p,{children:["Deber\xeda decir ",(0,s.jsx)(o.code,{children:"Connection to ... succeeded!"}),". Si falla, el problema de conexi\xf3n persiste."]}),"\n",(0,s.jsxs)(o.p,{children:["Una vez que la conexi\xf3n a Typha sea posible y los pods Typha est\xe9n saludables, el pod ",(0,s.jsx)(o.code,{children:"calico-node"})," deber\xeda poder inicializarse correctamente y pasar a estado ",(0,s.jsx)(o.code,{children:"READY"}),", lo que permitir\xe1 a ",(0,s.jsx)(o.code,{children:"confd"})," generar los archivos de configuraci\xf3n de BIRD."]})]})}function u(e={}){const{wrapper:o}={...(0,c.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>l,x:()=>r});var a=n(6540);const s={},c=a.createContext(s);function l(e){const o=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(c.Provider,{value:o},e.children)}}}]);